namespace Banque
{
    ///////////////////////////////////////////////////////////
    //  Compte.cs
    //  Implementation of the Class Compte
    //  Generated by Enterprise Architect
    //  Created on:      27-juin-2023 16:41:22
    //  Original author: TBonhommebrenner
    ///////////////////////////////////////////////////////////

    public class Compte
    {
        private int numero;
        private string nom;
        private double solde;
        private double decouvertAutorise;

        public int Numero
        {
            get { return numero; }
        }

        public double Solde
        {
            get { return solde; }
        }

        public Compte()
        {
            numero = 0;
            nom = "";
            solde = 0.00;
            decouvertAutorise = 0.00;
        }

        /// <param name="_numero"></param>
        /// <param name="_nom"></param>
        /// <param name="_solde"></param>
        /// <param name="_decouvertAutorise"></param>
        public Compte(int _numero, string _nom, double _solde, double _decouvertAutorise)
        {
            numero = _numero;
            nom = _nom;
            solde = _solde;
            decouvertAutorise = _decouvertAutorise;
        }

        /// 
        /// <param name="_montant"></param>
        public void Crediter(double _montant)
        {
            if (_montant > 0.00)
            {
                solde += _montant;
            }
        }

        /// 
        /// <param name="_montant"></param>
        public bool Debiter(double _montant)
        {
            bool debitOK = false;

            if(_montant > 0.00 && solde + decouvertAutorise >= _montant)
            {
                solde -= _montant;
                debitOK = true;
            }

            return debitOK;
        }

        /// 
        /// <param name="_autreCompte"></param>
        public bool Superieur(Compte? _autreCompte)
        {
            bool superieurOK = false;

            if (_autreCompte != null)
            {
                superieurOK = this.solde > _autreCompte.solde;
            }

            return superieurOK;
        }

        public override string ToString()
        {
            return "\nnumero : " + numero
                + "\nnom : " + nom
                + "\nsolde : " + solde
                + "\ndecouvertAutorise : " + decouvertAutorise;
        }

        /// 
        /// <param name="_compteDestinataire"></param>
        /// <param name="_montant"></param>
        public bool Transferer(Compte? _compteDestinataire, double _montant)
        {
            bool transfertOK = false;

            if (_compteDestinataire != null && Debiter(_montant))
            {
                _compteDestinataire.Crediter(_montant);
                transfertOK = true;
            }
            return transfertOK;
        }

    }//end Compte
}
